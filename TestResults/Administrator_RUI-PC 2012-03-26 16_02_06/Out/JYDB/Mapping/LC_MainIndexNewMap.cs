using System;
using System.Data.Entity.ModelConfiguration;
using System.Data.Common;
using System.Data.Entity;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Web.DataSets.Entities;

namespace System.Web.DataSets.Mapping
{
	public class LC_MainIndexNewMap : EntityTypeConfiguration<LC_MainIndexNew>
	{
		public LC_MainIndexNewMap()
		{
			// Primary Key
			this.HasKey(t => t.ID);

			// Properties
			// Table & Column Mappings
			this.ToTable("LC_MainIndexNew");
			this.Property(t => t.ID).HasColumnName("ID");
			this.Property(t => t.CompanyCode).HasColumnName("CompanyCode");
			this.Property(t => t.EndDate).HasColumnName("EndDate");
			this.Property(t => t.EPS).HasColumnName("EPS");
			this.Property(t => t.BasicEPS).HasColumnName("BasicEPS");
			this.Property(t => t.DilutedEPS).HasColumnName("DilutedEPS");
			this.Property(t => t.NetAssetPS).HasColumnName("NetAssetPS");
			this.Property(t => t.MainIncomePS).HasColumnName("MainIncomePS");
			this.Property(t => t.OperProfitPS).HasColumnName("OperProfitPS");
			this.Property(t => t.EBITPS).HasColumnName("EBITPS");
			this.Property(t => t.CapitalSurplusFundPS).HasColumnName("CapitalSurplusFundPS");
			this.Property(t => t.OperCashFlowPS).HasColumnName("OperCashFlowPS");
			this.Property(t => t.CashFlowPS).HasColumnName("CashFlowPS");
			this.Property(t => t.NetProfit).HasColumnName("NetProfit");
			this.Property(t => t.NetProfitCut).HasColumnName("NetProfitCut");
			this.Property(t => t.EBIT).HasColumnName("EBIT");
			this.Property(t => t.EBITDA).HasColumnName("EBITDA");
			this.Property(t => t.OperatingProfitRatio).HasColumnName("OperatingProfitRatio");
			this.Property(t => t.GrossIncomeRatio).HasColumnName("GrossIncomeRatio");
			this.Property(t => t.NetProfitRatio).HasColumnName("NetProfitRatio");
			this.Property(t => t.TotalProfitCostRatio).HasColumnName("TotalProfitCostRatio");
			this.Property(t => t.ROA).HasColumnName("ROA");
			this.Property(t => t.ROECut).HasColumnName("ROECut");
			this.Property(t => t.ROECutWeighted).HasColumnName("ROECutWeighted");
			this.Property(t => t.ROIC).HasColumnName("ROIC");
			this.Property(t => t.CurrentRatio).HasColumnName("CurrentRatio");
			this.Property(t => t.QuickRatio).HasColumnName("QuickRatio");
			this.Property(t => t.SuperQuickRatio).HasColumnName("SuperQuickRatio");
			this.Property(t => t.OperCashInToCurrentDebt).HasColumnName("OperCashInToCurrentDebt");
			this.Property(t => t.InterestCover).HasColumnName("InterestCover");
			this.Property(t => t.DebtAssetsRatio).HasColumnName("DebtAssetsRatio");
			this.Property(t => t.DebtEquityRatio).HasColumnName("DebtEquityRatio");
			this.Property(t => t.DebtTangibleEquityRatio).HasColumnName("DebtTangibleEquityRatio");
			this.Property(t => t.LongDebtToWorkingCapital).HasColumnName("LongDebtToWorkingCapital");
			this.Property(t => t.OperatingRevenueGrowRate).HasColumnName("OperatingRevenueGrowRate");
			this.Property(t => t.OperProfitGrowRate).HasColumnName("OperProfitGrowRate");
			this.Property(t => t.TotalProfeiGrowRate).HasColumnName("TotalProfeiGrowRate");
			this.Property(t => t.NetProfitGrowRate).HasColumnName("NetProfitGrowRate");
			this.Property(t => t.NetAssetGrowRate).HasColumnName("NetAssetGrowRate");
			this.Property(t => t.TotalAssetGrowRate).HasColumnName("TotalAssetGrowRate");
			this.Property(t => t.OperCashPSGrowRate).HasColumnName("OperCashPSGrowRate");
			this.Property(t => t.SustainableGrowRate).HasColumnName("SustainableGrowRate");
			this.Property(t => t.ARTRate).HasColumnName("ARTRate");
			this.Property(t => t.ARTDays).HasColumnName("ARTDays");
			this.Property(t => t.InventoryTRate).HasColumnName("InventoryTRate");
			this.Property(t => t.InventoryTDays).HasColumnName("InventoryTDays");
			this.Property(t => t.FixedAssetTRate).HasColumnName("FixedAssetTRate");
			this.Property(t => t.EquityTRate).HasColumnName("EquityTRate");
			this.Property(t => t.TotalAssetTRate).HasColumnName("TotalAssetTRate");
			this.Property(t => t.OperCycle).HasColumnName("OperCycle");
			this.Property(t => t.CashEquivalentIncrease).HasColumnName("CashEquivalentIncrease");
			this.Property(t => t.NetOperateCashFlow).HasColumnName("NetOperateCashFlow");
			this.Property(t => t.GoodsSaleServiceRenderCash).HasColumnName("GoodsSaleServiceRenderCash");
			this.Property(t => t.FreeCashFlow).HasColumnName("FreeCashFlow");
			this.Property(t => t.NetProfitCashCover).HasColumnName("NetProfitCashCover");
			this.Property(t => t.OperatingRevenueCashCover).HasColumnName("OperatingRevenueCashCover");
			this.Property(t => t.CashRateOfSales).HasColumnName("CashRateOfSales");
			this.Property(t => t.OperCashInToAsset).HasColumnName("OperCashInToAsset");
			this.Property(t => t.CashEquivalentPS).HasColumnName("CashEquivalentPS");
			this.Property(t => t.UndividedProfit).HasColumnName("UndividedProfit");
			this.Property(t => t.AccumulationFundPS).HasColumnName("AccumulationFundPS");
			this.Property(t => t.DividendPS).HasColumnName("DividendPS");
			this.Property(t => t.DividendCover).HasColumnName("DividendCover");
			this.Property(t => t.DividendPaidRatio).HasColumnName("DividendPaidRatio");
			this.Property(t => t.RetainedEarningRatio).HasColumnName("RetainedEarningRatio");
			this.Property(t => t.CashDividendCover).HasColumnName("CashDividendCover");
			this.Property(t => t.WorkingCapital).HasColumnName("WorkingCapital");
			this.Property(t => t.LongDebtToAsset).HasColumnName("LongDebtToAsset");
			this.Property(t => t.BondsPayableToAsset).HasColumnName("BondsPayableToAsset");
			this.Property(t => t.EquityToAsset).HasColumnName("EquityToAsset");
			this.Property(t => t.LongDebtToEquity).HasColumnName("LongDebtToEquity");
			this.Property(t => t.LongAssetFitRate).HasColumnName("LongAssetFitRate");
			this.Property(t => t.FixAssetRatio).HasColumnName("FixAssetRatio");
			this.Property(t => t.IntangibleAssetRatio).HasColumnName("IntangibleAssetRatio");
			this.Property(t => t.EquityMultipler).HasColumnName("EquityMultipler");
			this.Property(t => t.UpdateTime).HasColumnName("UpdateTime");
			this.Property(t => t.JSID).HasColumnName("JSID");
			this.Property(t => t.EPSTTM).HasColumnName("EPSTTM");
			this.Property(t => t.TotalOperatingRevenuePS).HasColumnName("TotalOperatingRevenuePS");
			this.Property(t => t.OperatingRevenuePSTTM).HasColumnName("OperatingRevenuePSTTM");
			this.Property(t => t.SurplusReserveFundPS).HasColumnName("SurplusReserveFundPS");
			this.Property(t => t.RetainedEarningsPS).HasColumnName("RetainedEarningsPS");
			this.Property(t => t.OperCashFlowPSTTM).HasColumnName("OperCashFlowPSTTM");
			this.Property(t => t.CashFlowPSTTM).HasColumnName("CashFlowPSTTM");
			this.Property(t => t.EnterpriseFCFPS).HasColumnName("EnterpriseFCFPS");
			this.Property(t => t.ShareHolderFCFPS).HasColumnName("ShareHolderFCFPS");
			this.Property(t => t.ROEAvg).HasColumnName("ROEAvg");
			this.Property(t => t.ROEWeighted).HasColumnName("ROEWeighted");
			this.Property(t => t.ROE).HasColumnName("ROE");
			this.Property(t => t.ROETTM).HasColumnName("ROETTM");
			this.Property(t => t.ROA_EBIT).HasColumnName("ROA_EBIT");
			this.Property(t => t.ROA_EBITTTM).HasColumnName("ROA_EBITTTM");
			this.Property(t => t.ROATTM).HasColumnName("ROATTM");
			this.Property(t => t.NetProfitRatioTTM).HasColumnName("NetProfitRatioTTM");
			this.Property(t => t.GrossIncomeRatioTTM).HasColumnName("GrossIncomeRatioTTM");
			this.Property(t => t.SalesCostRatio).HasColumnName("SalesCostRatio");
			this.Property(t => t.PeriodCostsRate).HasColumnName("PeriodCostsRate");
			this.Property(t => t.PeriodCostsRateTTM).HasColumnName("PeriodCostsRateTTM");
			this.Property(t => t.NPToTOR).HasColumnName("NPToTOR");
			this.Property(t => t.NPToTORTTM).HasColumnName("NPToTORTTM");
			this.Property(t => t.OperatingProfitToTOR).HasColumnName("OperatingProfitToTOR");
			this.Property(t => t.OperatingProfitToTORTTM).HasColumnName("OperatingProfitToTORTTM");
			this.Property(t => t.EBITToTOR).HasColumnName("EBITToTOR");
			this.Property(t => t.EBITToTORTTM).HasColumnName("EBITToTORTTM");
			this.Property(t => t.TOperatingCostToTOR).HasColumnName("TOperatingCostToTOR");
			this.Property(t => t.TOperatingCostToTORTTM).HasColumnName("TOperatingCostToTORTTM");
			this.Property(t => t.OperatingExpenseRate).HasColumnName("OperatingExpenseRate");
			this.Property(t => t.OperatingExpenseRateTTM).HasColumnName("OperatingExpenseRateTTM");
			this.Property(t => t.AdminiExpenseRate).HasColumnName("AdminiExpenseRate");
			this.Property(t => t.AdminiExpenseRateTTM).HasColumnName("AdminiExpenseRateTTM");
			this.Property(t => t.FinancialExpenseRate).HasColumnName("FinancialExpenseRate");
			this.Property(t => t.FinancialExpenseRateTTM).HasColumnName("FinancialExpenseRateTTM");
			this.Property(t => t.AssetImpaLossToTOR).HasColumnName("AssetImpaLossToTOR");
			this.Property(t => t.AssetImpaLossToTORTTM).HasColumnName("AssetImpaLossToTORTTM");
			this.Property(t => t.SEWithoutMIToTL).HasColumnName("SEWithoutMIToTL");
			this.Property(t => t.SEWMIToInterestBearDebt).HasColumnName("SEWMIToInterestBearDebt");
			this.Property(t => t.TangibleAToInteBearDebt).HasColumnName("TangibleAToInteBearDebt");
			this.Property(t => t.TangibleAToNetDebt).HasColumnName("TangibleAToNetDebt");
			this.Property(t => t.EBITDAToTLiability).HasColumnName("EBITDAToTLiability");
			this.Property(t => t.NOCFToTLiability).HasColumnName("NOCFToTLiability");
			this.Property(t => t.NOCFToInterestBearDebt).HasColumnName("NOCFToInterestBearDebt");
			this.Property(t => t.NOCFToCurrentLiability).HasColumnName("NOCFToCurrentLiability");
			this.Property(t => t.NOCFToNetDebt).HasColumnName("NOCFToNetDebt");
			this.Property(t => t.BasicEPSYOY).HasColumnName("BasicEPSYOY");
			this.Property(t => t.DilutedEPSYOY).HasColumnName("DilutedEPSYOY");
			this.Property(t => t.NPParentCompanyYOY).HasColumnName("NPParentCompanyYOY");
			this.Property(t => t.NPParentCompanyCutYOY).HasColumnName("NPParentCompanyCutYOY");
			this.Property(t => t.NetOperateCashFlowYOY).HasColumnName("NetOperateCashFlowYOY");
			this.Property(t => t.NAORYOY).HasColumnName("NAORYOY");
			this.Property(t => t.EPSGrowRateYTD).HasColumnName("EPSGrowRateYTD");
			this.Property(t => t.SEWithoutMIGrowRateYTD).HasColumnName("SEWithoutMIGrowRateYTD");
			this.Property(t => t.TAGrowRateYTD).HasColumnName("TAGrowRateYTD");
			this.Property(t => t.AccountsPayablesTRate).HasColumnName("AccountsPayablesTRate");
			this.Property(t => t.AccountsPayablesTDays).HasColumnName("AccountsPayablesTDays");
			this.Property(t => t.CurrentAssetsTRate).HasColumnName("CurrentAssetsTRate");
			this.Property(t => t.SaleServiceCashToOR).HasColumnName("SaleServiceCashToOR");
			this.Property(t => t.SaleServiceCashToORTTM).HasColumnName("SaleServiceCashToORTTM");
			this.Property(t => t.CashRateOfSalesTTM).HasColumnName("CashRateOfSalesTTM");
			this.Property(t => t.NOCFToOperatingNI).HasColumnName("NOCFToOperatingNI");
			this.Property(t => t.NOCFToOperatingNITTM).HasColumnName("NOCFToOperatingNITTM");
			this.Property(t => t.CapitalExpenditureToDM).HasColumnName("CapitalExpenditureToDM");
			this.Property(t => t.CurrentAssetsToTA).HasColumnName("CurrentAssetsToTA");
			this.Property(t => t.NonCurrentAssetsToTA).HasColumnName("NonCurrentAssetsToTA");
			this.Property(t => t.SEWithoutMIToTotalCapital).HasColumnName("SEWithoutMIToTotalCapital");
			this.Property(t => t.InteBearDebtToTotalCapital).HasColumnName("InteBearDebtToTotalCapital");
			this.Property(t => t.CurrentLiabilityToTL).HasColumnName("CurrentLiabilityToTL");
			this.Property(t => t.NonCurrentLiabilityToTL).HasColumnName("NonCurrentLiabilityToTL");
			this.Property(t => t.OperatingNIToTP).HasColumnName("OperatingNIToTP");
			this.Property(t => t.OperatingMIToTPTTM).HasColumnName("OperatingMIToTPTTM");
			this.Property(t => t.InvestRAssociatesToTP).HasColumnName("InvestRAssociatesToTP");
			this.Property(t => t.InvestRAssociatesToTPTTM).HasColumnName("InvestRAssociatesToTPTTM");
			this.Property(t => t.ValueChangeNIToTP).HasColumnName("ValueChangeNIToTP");
			this.Property(t => t.ValueChangeNIToTPTTM).HasColumnName("ValueChangeNIToTPTTM");
			this.Property(t => t.NetNonOperatingIncomeToTP).HasColumnName("NetNonOperatingIncomeToTP");
			this.Property(t => t.NetNonOIToTPTTM).HasColumnName("NetNonOIToTPTTM");
			this.Property(t => t.TaxesToTP).HasColumnName("TaxesToTP");
			this.Property(t => t.NPCutToTP).HasColumnName("NPCutToTP");
			this.Property(t => t.EquityMultipler_DuPont).HasColumnName("EquityMultipler_DuPont");
			this.Property(t => t.NPPCToNP_DuPont).HasColumnName("NPPCToNP_DuPont");
			this.Property(t => t.NPToTOR_DuPont).HasColumnName("NPToTOR_DuPont");
			this.Property(t => t.NPToTP_DuPont).HasColumnName("NPToTP_DuPont");
			this.Property(t => t.TPToEBIT_DuPont).HasColumnName("TPToEBIT_DuPont");
			this.Property(t => t.EBITToTOR_DuPont).HasColumnName("EBITToTOR_DuPont");
			this.Property(t => t.AvgNPYOYPastFiveYear).HasColumnName("AvgNPYOYPastFiveYear");
		}
	}
}

